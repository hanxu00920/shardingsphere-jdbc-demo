<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.post.trade.dao.TransSerialInfoMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.trade.entity.TransSerialInfo">
    <constructor>
      <idArg column="serial_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="transsqe" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="ordernum" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="transamt" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="actualtransamt" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="dctamt" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="paytype" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="transtime" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="merccode" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="transstatus" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    serial_id, transsqe, ordernum, transamt, actualtransamt, dctamt, paytype, transtime, 
    merccode, transstatus
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.trade.entity.TransSerialInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'ture' as QUERYID,
    <include refid="Base_Column_List" />
    from cd_trans_serial_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cd_trans_serial_info
    where serial_id = #{serialId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from cd_trans_serial_info
    where serial_id = #{serialId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.demo.trade.entity.TransSerialInfo">
    insert into cd_trans_serial_info (serial_id, transsqe, ordernum, 
      transamt, actualtransamt, dctamt, 
      paytype, transtime, merccode, 
      transstatus)
    values (#{serialId,jdbcType=BIGINT}, #{transsqe,jdbcType=VARCHAR}, #{ordernum,jdbcType=VARCHAR}, 
      #{transamt,jdbcType=VARCHAR}, #{actualtransamt,jdbcType=VARCHAR}, #{dctamt,jdbcType=VARCHAR}, 
      #{paytype,jdbcType=VARCHAR}, #{transtime,jdbcType=VARCHAR}, #{merccode,jdbcType=VARCHAR}, 
      #{transstatus,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.trade.entity.TransSerialInfo">
    insert into cd_trans_serial_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="serialId != null">
        serial_id,
      </if>
      <if test="transsqe != null">
        transsqe,
      </if>
      <if test="ordernum != null">
        ordernum,
      </if>
      <if test="transamt != null">
        transamt,
      </if>
      <if test="actualtransamt != null">
        actualtransamt,
      </if>
      <if test="dctamt != null">
        dctamt,
      </if>
      <if test="paytype != null">
        paytype,
      </if>
      <if test="transtime != null">
        transtime,
      </if>
      <if test="merccode != null">
        merccode,
      </if>
      <if test="transstatus != null">
        transstatus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="serialId != null">
        #{serialId,jdbcType=BIGINT},
      </if>
      <if test="transsqe != null">
        #{transsqe,jdbcType=VARCHAR},
      </if>
      <if test="ordernum != null">
        #{ordernum,jdbcType=VARCHAR},
      </if>
      <if test="transamt != null">
        #{transamt,jdbcType=VARCHAR},
      </if>
      <if test="actualtransamt != null">
        #{actualtransamt,jdbcType=VARCHAR},
      </if>
      <if test="dctamt != null">
        #{dctamt,jdbcType=VARCHAR},
      </if>
      <if test="paytype != null">
        #{paytype,jdbcType=VARCHAR},
      </if>
      <if test="transtime != null">
        #{transtime,jdbcType=VARCHAR},
      </if>
      <if test="merccode != null">
        #{merccode,jdbcType=VARCHAR},
      </if>
      <if test="transstatus != null">
        #{transstatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.trade.entity.TransSerialInfoExample" resultType="java.lang.Long">
    select count(*) from cd_trans_serial_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.trade.entity.TransSerialInfo">
    update cd_trans_serial_info
    <set>
      <if test="transsqe != null">
        transsqe = #{transsqe,jdbcType=VARCHAR},
      </if>
      <if test="ordernum != null">
        ordernum = #{ordernum,jdbcType=VARCHAR},
      </if>
      <if test="transamt != null">
        transamt = #{transamt,jdbcType=VARCHAR},
      </if>
      <if test="actualtransamt != null">
        actualtransamt = #{actualtransamt,jdbcType=VARCHAR},
      </if>
      <if test="dctamt != null">
        dctamt = #{dctamt,jdbcType=VARCHAR},
      </if>
      <if test="paytype != null">
        paytype = #{paytype,jdbcType=VARCHAR},
      </if>
      <if test="transtime != null">
        transtime = #{transtime,jdbcType=VARCHAR},
      </if>
      <if test="merccode != null">
        merccode = #{merccode,jdbcType=VARCHAR},
      </if>
      <if test="transstatus != null">
        transstatus = #{transstatus,jdbcType=VARCHAR},
      </if>
    </set>
    where serial_id = #{serialId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.trade.entity.TransSerialInfo">
    update cd_trans_serial_info
    set transsqe = #{transsqe,jdbcType=VARCHAR},
      ordernum = #{ordernum,jdbcType=VARCHAR},
      transamt = #{transamt,jdbcType=VARCHAR},
      actualtransamt = #{actualtransamt,jdbcType=VARCHAR},
      dctamt = #{dctamt,jdbcType=VARCHAR},
      paytype = #{paytype,jdbcType=VARCHAR},
      transtime = #{transtime,jdbcType=VARCHAR},
      merccode = #{merccode,jdbcType=VARCHAR},
      transstatus = #{transstatus,jdbcType=VARCHAR}
    where serial_id = #{serialId,jdbcType=BIGINT}
  </update>
</mapper>